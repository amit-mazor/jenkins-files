{"ast":null,"code":"var _jsxFileName = \"/Users/itamarmarom/Projects/nexus-uploader/nexus-uploader-dashboard/src/UploadStatusPie.js\";\nimport React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell } from 'recharts';\nconst data = [{\n  name: 'Success',\n  value: 400\n}, {\n  name: 'Failed',\n  value: 300\n}, {\n  name: 'UnknownFileType',\n  value: 300\n}, {\n  name: 'Pending',\n  value: 200\n}];\nconst colors = [\"#138185\", \"#ff0000\", \"#138185\", \"#ff0000\", \"#ff0000\"];\nexport default class UploadStatusPie extends PureComponent {\n  render() {\n    return /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      height: 400,\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(PieChart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      data: data,\n      innerRadius: 30,\n      outerRadius: 50,\n      startAngle: 90,\n      endAngle: 450,\n      dataKey: \"value\",\n      onMouseEnter: this.onPieEnter,\n      label: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n      key: `cell-${index}`,\n      fill: colors[index],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/itamarmarom/Projects/nexus-uploader/nexus-uploader-dashboard/src/UploadStatusPie.js"],"names":["React","PureComponent","PieChart","Pie","Sector","Cell","data","name","value","colors","UploadStatusPie","render","onPieEnter","map","entry","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,MAAxB,EAAgCC,IAAhC,QAA4C,UAA5C;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFW,EAGX;AAAED,EAAAA,IAAI,EAAE,iBAAR;AAA2BC,EAAAA,KAAK,EAAE;AAAlC,CAHW,EAIX;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJW,CAAb;AAOA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAf;AAEA,eAAe,MAAMC,eAAN,SAA8BT,aAA9B,CAA4C;AAEzDU,EAAAA,MAAM,GAAG;AACP,wBACI,oBAAC,mBAAD;AAAqB,MAAA,MAAM,EAAE,GAA7B;AAAkC,MAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AACI,MAAA,IAAI,EAAEL,IADV;AAEI,MAAA,WAAW,EAAE,EAFjB;AAGI,MAAA,WAAW,EAAE,EAHjB;AAII,MAAA,UAAU,EAAE,EAJhB;AAKI,MAAA,QAAQ,EAAE,GALd;AAMI,MAAA,OAAO,EAAC,OANZ;AAOI,MAAA,YAAY,EAAE,KAAKM,UAPvB;AAQI,MAAA,KAAK,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWIN,IAAI,CAACO,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACL,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAG,QAAOA,KAAM,EAAzB;AAA4B,MAAA,IAAI,EAAEN,MAAM,CAACM,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,CADJ,CADA,CADJ;AAsBD;;AAzBwD","sourcesContent":["import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell } from 'recharts';\n\nconst data = [\n  { name: 'Success', value: 400 },\n  { name: 'Failed', value: 300 },\n  { name: 'UnknownFileType', value: 300 },\n  { name: 'Pending', value: 200 },\n];\n\nconst colors = [\"#138185\", \"#ff0000\", \"#138185\", \"#ff0000\", \"#ff0000\"];\n\nexport default class UploadStatusPie extends PureComponent {\n\n  render() {\n    return (\n        <ResponsiveContainer height={400} width=\"100%\">\n        <PieChart>\n            <Pie\n                data={data}\n                innerRadius={30}\n                outerRadius={50}\n                startAngle={90} \n                endAngle={450}\n                dataKey=\"value\"\n                onMouseEnter={this.onPieEnter}\n                label\n            >\n            {\n                data.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={colors[index]}/>\n                ))\n            }\n            </Pie>\n        </PieChart>\n        </ResponsiveContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}